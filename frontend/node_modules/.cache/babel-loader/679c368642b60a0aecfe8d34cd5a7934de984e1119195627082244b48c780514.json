{"ast":null,"code":"import React from'react';/**\n * Grid interface includes the properties to represent the state of a grid in the game.\n */ /**\n * GridInfo interface defines the props that the grid component expects.\n */import{jsx as _jsx}from\"react/jsx-runtime\";const Cell=_ref=>{let{grid,onCellClick,x,y,className}=_ref;const{height,hasDome,occupyStatus}=grid;let content=hasDome?\"Dome\":height.toString();let cellStyle=className;if(occupyStatus===0){cellStyle+=\" yellow-grid\";}else if(occupyStatus===1){cellStyle+=\" blue-grid\";}return/*#__PURE__*/_jsx(\"button\",{className:cellStyle,onClick:()=>onCellClick(x,y),children:content});};export{Cell};","map":{"version":3,"names":["React","jsx","_jsx","Cell","_ref","grid","onCellClick","x","y","className","height","hasDome","occupyStatus","content","toString","cellStyle","onClick","children"],"sources":["C:/Users/11372/Desktop/s24-hw3-santorini-shuyingh07/frontend/src/Cell.tsx"],"sourcesContent":["import React from 'react';\n\n/**\n * Grid interface includes the properties to represent the state of a grid in the game.\n */\ninterface Grid {\n    height: number; \n    hasDome: boolean;\n    occupyStatus: number; // Represents occupation status: 0 for player 0, 1 for player 1\n}\n\n/**\n * GridInfo interface defines the props that the grid component expects.\n */\ninterface GridInfo {\n    grid: Grid;\n    onCellClick: (x: number, y: number) => void;\n    x: number;\n    y: number;\n    className?: string;\n}\n\nconst Cell: React.FC<GridInfo> = ({ grid, onCellClick, x, y, className }) => {\n    const { height, hasDome, occupyStatus } = grid;\n    \n    let content = hasDome ? \"Dome\" : height.toString();\n    let cellStyle = className;\n    \n    if (occupyStatus === 0) {\n        cellStyle += \" yellow-grid\";\n    } else if (occupyStatus === 1) {\n        cellStyle += \" blue-grid\"; \n    }\n\n    return (\n        <button className={cellStyle} onClick={() => onCellClick(x, y)}>\n            {content}\n        </button>\n    );\n};\n\nexport { Cell, Grid };"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA,GAFA,CASA;AACA;AACA,GAFA,OAAAC,GAAA,IAAAC,IAAA,yBAWA,KAAM,CAAAC,IAAwB,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,IAAI,CAAEC,WAAW,CAAEC,CAAC,CAAEC,CAAC,CAAEC,SAAU,CAAC,CAAAL,IAAA,CACpE,KAAM,CAAEM,MAAM,CAAEC,OAAO,CAAEC,YAAa,CAAC,CAAGP,IAAI,CAE9C,GAAI,CAAAQ,OAAO,CAAGF,OAAO,CAAG,MAAM,CAAGD,MAAM,CAACI,QAAQ,CAAC,CAAC,CAClD,GAAI,CAAAC,SAAS,CAAGN,SAAS,CAEzB,GAAIG,YAAY,GAAK,CAAC,CAAE,CACpBG,SAAS,EAAI,cAAc,CAC/B,CAAC,IAAM,IAAIH,YAAY,GAAK,CAAC,CAAE,CAC3BG,SAAS,EAAI,YAAY,CAC7B,CAEA,mBACIb,IAAA,WAAQO,SAAS,CAAEM,SAAU,CAACC,OAAO,CAAEA,CAAA,GAAMV,WAAW,CAACC,CAAC,CAAEC,CAAC,CAAE,CAAAS,QAAA,CAC1DJ,OAAO,CACJ,CAAC,CAEjB,CAAC,CAED,OAASV,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11372\\\\Desktop\\\\s24-hw3-santorini-shuyingh07\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const initialBoard = Array.from({\n    length: 5\n  }, () => Array(5).fill(null));\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [playerStatus, setPlayerStatus] = useState(\"initialize\");\n  const handleCellClick = (x, y) => {\n    if (selectedCells.length < 2) {\n      setSelectedCells(prev => [...prev, {\n        x,\n        y\n      }]);\n    }\n  };\n  useEffect(() => {\n    if (selectedCells.length === 2) {\n      const [cell1, cell2] = selectedCells;\n      let url;\n      if (playerStatus === \"initialize\") {\n        url = `http://localhost:8080/initWorker?worker1X=${cell1.x}&worker1Y=${cell1.y}&worker2X=${cell2.x}&worker2Y=${cell2.y}`;\n      } else if (playerStatus === \"move\") {\n        url = `http://localhost:8080/move?worker1X=${cell1.x}&worker1Y=${cell1.y}&targetX=${cell2.x}&targetY=${cell2.y}`;\n      }\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw new Error('选择错误');\n        }\n        return response.json();\n      }).then(data => {\n        const nextPlayerStatus = data.nextPlayerStatus;\n        setPlayerStatus(nextPlayerStatus);\n        const color = data.playerId === 0 ? 'yellow' : 'blue';\n        setBoard(currentBoard => currentBoard.map((row, rowIndex) => row.map((cell, cellIndex) => rowIndex === cell1.x && cellIndex === cell1.y || rowIndex === cell2.x && cellIndex === cell2.y ? color : cell)));\n        setSelectedCells([]); // 清空选择以便下一次操作\n      }).catch(error => console.error('Error:', error));\n    }\n  }, [selectedCells, playerStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: cell || 'white'\n        },\n        onClick: () => handleCellClick(rowIndex, cellIndex)\n      }, cellIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5Qn0qlp/Ku3YddvYmP5SXKXmexg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","initialBoard","Array","from","length","fill","board","setBoard","selectedCells","setSelectedCells","playerStatus","setPlayerStatus","handleCellClick","x","y","prev","cell1","cell2","url","fetch","then","response","ok","Error","json","data","nextPlayerStatus","color","playerId","currentBoard","map","row","rowIndex","cell","cellIndex","catch","error","console","className","children","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/11372/Desktop/s24-hw3-santorini-shuyingh07/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\ninterface CellPosition {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst App = () => {\r\n  const initialBoard = Array.from({ length: 5 }, () => Array(5).fill(null));\r\n  const [board, setBoard] = useState<string[][]>(initialBoard);\r\n  const [selectedCells, setSelectedCells] = useState<CellPosition[]>([]);\r\n  const [playerStatus, setPlayerStatus] = useState<string>(\"initialize\");\r\n  const handleCellClick = (x: number, y: number) => {\r\n    if (selectedCells.length < 2) {\r\n      setSelectedCells(prev => [...prev, { x, y }]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCells.length === 2) {\r\n      const [cell1, cell2] = selectedCells;\r\n      let url;\r\n      if (playerStatus === \"initialize\") {\r\n        url = `http://localhost:8080/initWorker?worker1X=${cell1.x}&worker1Y=${cell1.y}&worker2X=${cell2.x}&worker2Y=${cell2.y}`;\r\n      } else if (playerStatus === \"move\") {\r\n        url = `http://localhost:8080/move?worker1X=${cell1.x}&worker1Y=${cell1.y}&targetX=${cell2.x}&targetY=${cell2.y}`;\r\n      }\r\n  \r\n      fetch(url)\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('选择错误');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          const nextPlayerStatus = data.nextPlayerStatus;\r\n          setPlayerStatus(nextPlayerStatus);\r\n          \r\n          const color = data.playerId === 0 ? 'yellow' : 'blue';\r\n          setBoard(currentBoard => \r\n            currentBoard.map((row, rowIndex) => \r\n              row.map((cell, cellIndex) => \r\n                ((rowIndex === cell1.x && cellIndex === cell1.y) || (rowIndex === cell2.x && cellIndex === cell2.y)) ? color : cell\r\n              )\r\n            )\r\n          );\r\n          setSelectedCells([]); // 清空选择以便下一次操作\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedCells, playerStatus]);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {board.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"row\">\r\n          {row.map((cell, cellIndex) => (\r\n            <div key={cellIndex} className=\"cell\" style={{ backgroundColor: cell || 'white' }} onClick={() => handleCellClick(rowIndex, cellIndex)}></div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}